/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Greeter, GreeterInterface } from "../../contracts/Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001580380380620015808339818101604052810190620000379190620003d8565b620000576200004b620000a060201b60201c565b620000a860201b60201c565b620000876040518060600160405280602281526020016200155e60229139826200016c60201b620002f41760201c565b806001908162000098919062000674565b5050620007e8565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6200020e828260405160240162000185929190620007ad565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200021260201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002a48262000259565b810181811067ffffffffffffffff82111715620002c657620002c56200026a565b5b80604052505050565b6000620002db6200023b565b9050620002e9828262000299565b919050565b600067ffffffffffffffff8211156200030c576200030b6200026a565b5b620003178262000259565b9050602081019050919050565b60005b838110156200034457808201518184015260208101905062000327565b8381111562000354576000848401525b50505050565b6000620003716200036b84620002ee565b620002cf565b90508281526020810184848401111562000390576200038f62000254565b5b6200039d84828562000324565b509392505050565b600082601f830112620003bd57620003bc6200024f565b5b8151620003cf8482602086016200035a565b91505092915050565b600060208284031215620003f157620003f062000245565b5b600082015167ffffffffffffffff8111156200041257620004116200024a565b5b6200042084828501620003a5565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200047c57607f821691505b60208210810362000492576200049162000434565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004fc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004bd565b620005088683620004bd565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620005556200054f620005498462000520565b6200052a565b62000520565b9050919050565b6000819050919050565b620005718362000534565b6200058962000580826200055c565b848454620004ca565b825550505050565b600090565b620005a062000591565b620005ad81848462000566565b505050565b5b81811015620005d557620005c960008262000596565b600181019050620005b3565b5050565b601f8211156200062457620005ee8162000498565b620005f984620004ad565b8101602085101562000609578190505b620006216200061885620004ad565b830182620005b2565b50505b505050565b600082821c905092915050565b6000620006496000198460080262000629565b1980831691505092915050565b600062000664838362000636565b9150826002028217905092915050565b6200067f8262000429565b67ffffffffffffffff8111156200069b576200069a6200026a565b5b620006a7825462000463565b620006b4828285620005d9565b600060209050601f831160018114620006ec5760008415620006d7578287015190505b620006e3858262000656565b86555062000753565b601f198416620006fc8662000498565b60005b828110156200072657848901518255600182019150602085019450602081019050620006ff565b8683101562000746578489015162000742601f89168262000636565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b6000620007798262000429565b6200078581856200075b565b93506200079781856020860162000324565b620007a28162000259565b840191505092915050565b60006040820190508181036000830152620007c981856200076c565b90508181036020830152620007df81846200076c565b90509392505050565b610d6680620007f86000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063a413686214610084578063cfae3217146100a0578063f2fde38b146100be575b600080fd5b6100646100da565b005b61006e6100ee565b60405161007b91906105e3565b60405180910390f35b61009e60048036038101906100999190610758565b610117565b005b6100a86101df565b6040516100b59190610829565b60405180910390f35b6100d860048036038101906100d39190610877565b610271565b005b6100e2610390565b6100ec600061040e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61011f610390565b6101cc604051806060016040528060238152602001610d0e6023913960018054610148906108d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610174906108d3565b80156101c15780601f10610196576101008083540402835291602001916101c1565b820191906000526020600020905b8154815290600101906020018083116101a457829003601f168201915b5050505050836104d2565b80600190816101db9190610aba565b5050565b6060600180546101ee906108d3565b80601f016020809104026020016040519081016040528092919081815260200182805461021a906108d3565b80156102675780601f1061023c57610100808354040283529160200191610267565b820191906000526020600020905b81548152906001019060200180831161024a57829003601f168201915b5050505050905090565b610279610390565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102df90610bfe565b60405180910390fd5b6102f18161040e565b50565b61038c828260405160240161030a929190610c1e565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610571565b5050565b61039861059a565b73ffffffffffffffffffffffffffffffffffffffff166103b66100ee565b73ffffffffffffffffffffffffffffffffffffffff161461040c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040390610ca1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61056c8383836040516024016104ea93929190610cc1565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610571565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105cd826105a2565b9050919050565b6105dd816105c2565b82525050565b60006020820190506105f860008301846105d4565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106658261061c565b810181811067ffffffffffffffff821117156106845761068361062d565b5b80604052505050565b60006106976105fe565b90506106a3828261065c565b919050565b600067ffffffffffffffff8211156106c3576106c261062d565b5b6106cc8261061c565b9050602081019050919050565b82818337600083830152505050565b60006106fb6106f6846106a8565b61068d565b90508281526020810184848401111561071757610716610617565b5b6107228482856106d9565b509392505050565b600082601f83011261073f5761073e610612565b5b813561074f8482602086016106e8565b91505092915050565b60006020828403121561076e5761076d610608565b5b600082013567ffffffffffffffff81111561078c5761078b61060d565b5b6107988482850161072a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107db5780820151818401526020810190506107c0565b838111156107ea576000848401525b50505050565b60006107fb826107a1565b61080581856107ac565b93506108158185602086016107bd565b61081e8161061c565b840191505092915050565b6000602082019050818103600083015261084381846107f0565b905092915050565b610854816105c2565b811461085f57600080fd5b50565b6000813590506108718161084b565b92915050565b60006020828403121561088d5761088c610608565b5b600061089b84828501610862565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806108eb57607f821691505b6020821081036108fe576108fd6108a4565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026109667fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610929565b6109708683610929565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006109b76109b26109ad84610988565b610992565b610988565b9050919050565b6000819050919050565b6109d18361099c565b6109e56109dd826109be565b848454610936565b825550505050565b600090565b6109fa6109ed565b610a058184846109c8565b505050565b5b81811015610a2957610a1e6000826109f2565b600181019050610a0b565b5050565b601f821115610a6e57610a3f81610904565b610a4884610919565b81016020851015610a57578190505b610a6b610a6385610919565b830182610a0a565b50505b505050565b600082821c905092915050565b6000610a9160001984600802610a73565b1980831691505092915050565b6000610aaa8383610a80565b9150826002028217905092915050565b610ac3826107a1565b67ffffffffffffffff811115610adc57610adb61062d565b5b610ae682546108d3565b610af1828285610a2d565b600060209050601f831160018114610b245760008415610b12578287015190505b610b1c8582610a9e565b865550610b84565b601f198416610b3286610904565b60005b82811015610b5a57848901518255600182019150602085019450602081019050610b35565b86831015610b775784890151610b73601f891682610a80565b8355505b6001600288020188555050505b505050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610be86026836107ac565b9150610bf382610b8c565b604082019050919050565b60006020820190508181036000830152610c1781610bdb565b9050919050565b60006040820190508181036000830152610c3881856107f0565b90508181036020830152610c4c81846107f0565b90509392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c8b6020836107ac565b9150610c9682610c55565b602082019050919050565b60006020820190508181036000830152610cba81610c7e565b9050919050565b60006060820190508181036000830152610cdb81866107f0565b90508181036020830152610cef81856107f0565b90508181036040830152610d0381846107f0565b905094935050505056fe4368616e67696e67206772656574696e672066726f6d202725732720746f2027257327a26469706673582212206890dbf2745b4c483b0a5d941401d5922b352ccbaa88e0cb7226d0e6272cf33d64736f6c634300080f00334465706c6f79696e67206120477265657465722077697468206772656574696e673a";

type GreeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Greeter__factory extends ContractFactory {
  constructor(...args: GreeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _greeting: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Greeter> {
    return super.deploy(_greeting, overrides || {}) as Promise<Greeter>;
  }
  override getDeployTransaction(
    _greeting: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  override attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  override connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
