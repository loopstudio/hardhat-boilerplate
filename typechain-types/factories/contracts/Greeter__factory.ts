/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Greeter, GreeterInterface } from "../../contracts/Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620017ea380380620017ea8339818101604052810190620000379190620004df565b620000576200004b620001a460201b60201c565b620001ac60201b60201c565b6200008b7f1ed3414ee3a3d0c228869b9e630341d0a4b976e4b7841fdbca9f1d151e6d3b4560001b6200027060201b60201c565b620000bf7f31c5e78ff22cc5a6a60a9127a3259504dae0521e303fa855f3c764cfd5ecc7c760001b6200027060201b60201c565b620000f37f457fb3f0ba79a9fdb445a0888af81b7e5f0ad974297aa0b54052ea1f3f720cc160001b6200027060201b60201c565b62000123604051806060016040528060228152602001620017c860229139826200027360201b620004541760201c565b620001577fd9065515b771163ba1a0c4bdc95cdb97c85aad1bb583d060b69f947e890bbd9c60001b6200027060201b60201c565b6200018b7fbc2f4cff3295c38d8841b9912986f69006d964504a5ae18f179fbcaee5dec5cb60001b6200027060201b60201c565b80600190816200019c91906200077b565b5050620008ef565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b6200031582826040516024016200028c929190620008b4565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200031960201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003ab8262000360565b810181811067ffffffffffffffff82111715620003cd57620003cc62000371565b5b80604052505050565b6000620003e262000342565b9050620003f08282620003a0565b919050565b600067ffffffffffffffff82111562000413576200041262000371565b5b6200041e8262000360565b9050602081019050919050565b60005b838110156200044b5780820151818401526020810190506200042e565b838111156200045b576000848401525b50505050565b6000620004786200047284620003f5565b620003d6565b9050828152602081018484840111156200049757620004966200035b565b5b620004a48482856200042b565b509392505050565b600082601f830112620004c457620004c362000356565b5b8151620004d684826020860162000461565b91505092915050565b600060208284031215620004f857620004f76200034c565b5b600082015167ffffffffffffffff81111562000519576200051862000351565b5b6200052784828501620004ac565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200058357607f821691505b6020821081036200059957620005986200053b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620005c4565b6200060f8683620005c4565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200065c62000656620006508462000627565b62000631565b62000627565b9050919050565b6000819050919050565b62000678836200063b565b62000690620006878262000663565b848454620005d1565b825550505050565b600090565b620006a762000698565b620006b48184846200066d565b505050565b5b81811015620006dc57620006d06000826200069d565b600181019050620006ba565b5050565b601f8211156200072b57620006f5816200059f565b6200070084620005b4565b8101602085101562000710578190505b620007286200071f85620005b4565b830182620006b9565b50505b505050565b600082821c905092915050565b6000620007506000198460080262000730565b1980831691505092915050565b60006200076b83836200073d565b9150826002028217905092915050565b620007868262000530565b67ffffffffffffffff811115620007a257620007a162000371565b5b620007ae82546200056a565b620007bb828285620006e0565b600060209050601f831160018114620007f35760008415620007de578287015190505b620007ea85826200075d565b8655506200085a565b601f19841662000803866200059f565b60005b828110156200082d5784890151825560018201915060208501945060208101905062000806565b868310156200084d578489015162000849601f8916826200073d565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b6000620008808262000530565b6200088c818562000862565b93506200089e8185602086016200042b565b620008a98162000360565b840191505092915050565b60006040820190508181036000830152620008d0818562000873565b90508181036020830152620008e6818462000873565b90509392505050565b610ec980620008ff6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063a413686214610084578063cfae3217146100a0578063f2fde38b146100be575b600080fd5b6100646100da565b005b61006e6100ee565b60405161007b9190610746565b60405180910390f35b61009e600480360381019061009991906108bb565b610117565b005b6100a86102bb565b6040516100b5919061098c565b60405180910390f35b6100d860048036038101906100d391906109da565b6103d1565b005b6100e26104f0565b6100ec600061056e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61011f6104f0565b61014b7fa2d262dfe6618524b13b1d14166c0356a5ac683509a208439864db4ccf97338d60001b610632565b6101777fa8253105528aa77e34d1ed44f460e34301fbd5e071c1b1c98e6627b3f1d6cf3b60001b610632565b6101a37f997602e1410dcc6fa0ff7f959612ca8235f038ee6d9bd0b5c0b1d43db65c515f60001b610632565b610250604051806060016040528060238152602001610e7160239139600180546101cc90610a36565b80601f01602080910402602001604051908101604052809291908181526020018280546101f890610a36565b80156102455780601f1061021a57610100808354040283529160200191610245565b820191906000526020600020905b81548152906001019060200180831161022857829003601f168201915b505050505083610635565b61027c7fef778338e7339af4816eeb729c415526c0af506fff3ad191ae498a734420e5a460001b610632565b6102a87f05f1273b67454f09a914ec4f8cad0da774b4c695d8d034c6bf0235ebe888bdc060001b610632565b80600190816102b79190610c1d565b5050565b60606102e97f493ac4f994d9ec9784ac6544f906aa8d574ed9752578a4fd2990b5dc4a89a72860001b610632565b6103157fa6f09695febf0d6e749b38d264fb603642b5eb62cf3b244e8e20629810fcf39660001b610632565b6103417f02617afc80b1d814b42fb9dff044e0f59dc417e13de99f6c4c6abb65b0d196a160001b610632565b6001805461034e90610a36565b80601f016020809104026020016040519081016040528092919081815260200182805461037a90610a36565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6103d96104f0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610448576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043f90610d61565b60405180910390fd5b6104518161056e565b50565b6104ec828260405160240161046a929190610d81565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106d4565b5050565b6104f86106fd565b73ffffffffffffffffffffffffffffffffffffffff166105166100ee565b73ffffffffffffffffffffffffffffffffffffffff161461056c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056390610e04565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b6106cf83838360405160240161064d93929190610e24565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106d4565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061073082610705565b9050919050565b61074081610725565b82525050565b600060208201905061075b6000830184610737565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107c88261077f565b810181811067ffffffffffffffff821117156107e7576107e6610790565b5b80604052505050565b60006107fa610761565b905061080682826107bf565b919050565b600067ffffffffffffffff82111561082657610825610790565b5b61082f8261077f565b9050602081019050919050565b82818337600083830152505050565b600061085e6108598461080b565b6107f0565b90508281526020810184848401111561087a5761087961077a565b5b61088584828561083c565b509392505050565b600082601f8301126108a2576108a1610775565b5b81356108b284826020860161084b565b91505092915050565b6000602082840312156108d1576108d061076b565b5b600082013567ffffffffffffffff8111156108ef576108ee610770565b5b6108fb8482850161088d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561093e578082015181840152602081019050610923565b8381111561094d576000848401525b50505050565b600061095e82610904565b610968818561090f565b9350610978818560208601610920565b6109818161077f565b840191505092915050565b600060208201905081810360008301526109a68184610953565b905092915050565b6109b781610725565b81146109c257600080fd5b50565b6000813590506109d4816109ae565b92915050565b6000602082840312156109f0576109ef61076b565b5b60006109fe848285016109c5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610a4e57607f821691505b602082108103610a6157610a60610a07565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610ac97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610a8c565b610ad38683610a8c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000610b1a610b15610b1084610aeb565b610af5565b610aeb565b9050919050565b6000819050919050565b610b3483610aff565b610b48610b4082610b21565b848454610a99565b825550505050565b600090565b610b5d610b50565b610b68818484610b2b565b505050565b5b81811015610b8c57610b81600082610b55565b600181019050610b6e565b5050565b601f821115610bd157610ba281610a67565b610bab84610a7c565b81016020851015610bba578190505b610bce610bc685610a7c565b830182610b6d565b50505b505050565b600082821c905092915050565b6000610bf460001984600802610bd6565b1980831691505092915050565b6000610c0d8383610be3565b9150826002028217905092915050565b610c2682610904565b67ffffffffffffffff811115610c3f57610c3e610790565b5b610c498254610a36565b610c54828285610b90565b600060209050601f831160018114610c875760008415610c75578287015190505b610c7f8582610c01565b865550610ce7565b601f198416610c9586610a67565b60005b82811015610cbd57848901518255600182019150602085019450602081019050610c98565b86831015610cda5784890151610cd6601f891682610be3565b8355505b6001600288020188555050505b505050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610d4b60268361090f565b9150610d5682610cef565b604082019050919050565b60006020820190508181036000830152610d7a81610d3e565b9050919050565b60006040820190508181036000830152610d9b8185610953565b90508181036020830152610daf8184610953565b90509392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610dee60208361090f565b9150610df982610db8565b602082019050919050565b60006020820190508181036000830152610e1d81610de1565b9050919050565b60006060820190508181036000830152610e3e8186610953565b90508181036020830152610e528185610953565b90508181036040830152610e668184610953565b905094935050505056fe4368616e67696e67206772656574696e672066726f6d202725732720746f2027257327a264697066735822122090a976b6497f5a91d96ca51156223dd6ad9951d80f383999e01f0f5bf5f9e84f64736f6c634300080f00334465706c6f79696e67206120477265657465722077697468206772656574696e673a";

type GreeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Greeter__factory extends ContractFactory {
  constructor(...args: GreeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _greeting: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Greeter> {
    return super.deploy(_greeting, overrides || {}) as Promise<Greeter>;
  }
  override getDeployTransaction(
    _greeting: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  override attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  override connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
